#!/bin/sh

# rappid-build script for mcstas-kernel dev:

git checkout master
git pull

# Ensure our 3rd party modules are in place and updated
THIRDPARTY=`ls 3rdparty | grep -v patches`
cd 3rdparty
echo $THIRDPARTY | xargs -n1 rm -r
cd -
git submodule init
git submodule update --recursive --remote --recursive --remote


for MODULE in `echo $THIRDPARTY`
do
    if [ -d "3rdparty/patches/${MODULE}" ]; then
	echo Making McCode cmake modules available for $MODULE
        rsync -avz cmake/ 3rdparty/${MODULE}/cmake
	echo Applying McCode patches to 3rdparty/${MODULE}
	cp -rp 3rdparty/patches/${MODULE}/* 3rdparty/${MODULE}/
    fi
done

WORK=`pwd`

export MCINSTALL_PREFIX=$HOME/McStas
export CC=gcc
export FC=gfortran

./mkdist mcstas 2.5 "" "" deb64 "" -- justinst
./mkdist mcstas-comps 2.5 "" "" deb64 "" -- justinst
# can be out-commented after the first build iteration:
./mkdist mcstas-tools-perl-cmdline 2.5 tools/Legacy-Perl-cmdline/ "" deb64 "" -- justinst
./mkdist mcstas-tools-python-mcrun 2.5 tools/Python/mcrun/ "" deb64 "" -- justinst
./mkdist mcstas-tools-python-mccodelib 2.5 tools/Python/mccodelib/ "" deb64 "" -- justinst
./mkdist mcstas-tools-python-mcdisplay-pyqtgraph 2.5 tools/Python/mcdisplay/pyqtgraph/ "" deb64 "" -- justinst
./mkdist mcstas-tools-python-mcplot-matplotlib 2.5 tools/Python/mcplot/matplotlib/ "" deb64 "" -- justinst

# Ensure we are configured for 10 node MPI runs
sed -i s/\'4\'/\'10\'/g $MCINSTALL_PREFIX/mcstas/2.5/tools/Python/mccodelib/mccode_config.py

export MCINSTALL_PREFIX=$HOME/McStas/mcstas/2.5/
./mkdist mcstas-ncrystal $1 3rdparty/ncrystal "" deb64 "" -- justinst

